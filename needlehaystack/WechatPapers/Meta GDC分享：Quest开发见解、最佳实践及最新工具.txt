Meta GDC分享：Quest开发见解、最佳实践及最新工具          原创                                      映维网Nweon                                                  映维网Nweon              映维网Nweon微信号NweonXR功能介绍映维网是一个始于2014年10月的增强现实（AR）、虚拟现实（VR）产业信息数据平台，专注于AR/VR产业发展及市场教育培养，致力于引导全球AR/VR产业发展，服务于全球各地的AR/VR创业者。
Meta正继续分享GDC大会的见解（映维网Nweon 2024年03月25日）Meta正继续分享GDC大会的见解。
今天，团队将分享为Meta Quest开发的见解和最佳实践，包括提供优化体验的最新工具。
这家公司同时讨论了在平台发行应用的开发者最佳实践，以及如何利用App Lab作为商业和营销工具。
充分发挥Meta Quest的魔力为手机、沉浸式头显开发游戏有何不同？非常不同。
本·沃克（Ben Walker）分享了他多年来帮助开发者在Meta Quest发行内容的指导。
需要考虑的一个重要因素是，Meta Quest与PC/主机的不同之处在于头显是一种用于虚拟现实和混合现实的电池供能设备。
尽管这似乎是显而易见，但依然存在诸多架构方面的考虑会影响到所有决定为Meta Quest创造体验的开发者。
Meta Quest 3的大部分供能都用于运行CPU和GPU。
Meta有一个等级系统，等级越高，时钟速度就越快。
对于大多数开发者，Meta建议如果没有充分利用CPU或GPU，你应该暂时降低应用程序的时钟速度。
为了以最大容量运行，你必须进行权衡。
应用中严重依赖CPU或GPU的组件或功能是所谓的“成本高昂”功能。
最值得注意的是，其中一个功能是透视。
Passthrough不仅仅是头显摄像头的视频输入。
尽管透视确实有减少模拟器眩晕的好处，但它同时具有利用手部追踪的好处。
目标是确保手的透视视图与现实保持一致。
需要知道的是，用户眼睛和摄像头之间几厘米的位置差异都会极大地影响手在用户眼中（黑色）和摄像头眼中（红色）的位置。
如果视图没有对齐，透视馈送会破坏你的本体感。
这对于需要你接住抛来球或快速指向一个小按钮的游戏设计体验来说非常重要。
即便你不打算利用手部追踪，Meta Quest 3的这一组件可以确保你所握持的控制器与游戏中的控制器保持一致。
值得注意的是，在Meta Quest 3中，系统是在整个应用渲染完成后添加透视。
这是为了安全，所以应用程序不能存储用户环境的照片。
合成器将你的应用程序提交的帧、透视摄像头和任何其他提交帧的应用程序的渲染放在一起的系统被称为合成器。
合成器的工作之一是将不同运行进程提交的图层堆叠在一起。
合成器的另一项工作是将图像渲染到屏幕。
发送到我们屏幕的图像是桶形失真的，而这种失真会被透镜中的枕形扭曲抵消掉。
这允许使用更简单的透镜，并在屏幕中心放置更多的像素。
这是一个真正的双赢场景。
Quest 3每只眼睛有一个屏幕，屏幕随着透镜移动，所以瞳孔间距离不会影响在屏幕渲染的内容。
这是相关的，因为当你获取特定文本的源纹理，然后将其渲染到场景中的世界内菜单或对话框，然后合成器扭曲场景时，它是完全相同的变换和重新渲染链，并应用相同的模糊量。
如何解决这个问题？实际上只有一种方法：你必须进行从输入纹理到世界内渲染的转换，以及从世界内渲染到透镜扭曲输出的转换，到一个只采样一次的转换。
如果你不确定应用程序的文本质量，问问你的文本是否像内置应用程序一样容易阅读。
如果你正在制作一个用户界面，并且要放置不止一个句子的文本，Meta建议你花时间将用户界面放在一个合成器层上。
目标帧率和应用空间扭曲开发者经常会在Quest 3中遇到目标帧率的问题。
正如文章开始时提到的一样，重要的是要记住（并在设计时考虑到这一点），Quest 3是电池供能设备，而大部分供能都用于运行CPU和GPU。
这种架构的结果是，额外的渲染通道成本更高。
Unity和Unreal中的许多系统，比如HDR，实时阴影，延迟渲染，它们实际上是额外的渲染通道。
尽管Quest支持它们，但你支付的额外成本意味着相较于Unity和Unreal的建议，你应该更多地考虑和小心选择你的渲染通道。
诸如《刺客信条：联结核心VR》这样的游戏使用了名为Application SpaceWarp应用空间扭曲的系统。
这里的概念非常简单：Quest不是每隔几毫秒渲染一帧，而是每隔一帧合成一帧。
这样你的CPU和GPU可以有双倍的周期来计算和渲染令用户难以置信的画面。
在使用Application SpaceWarp时，你需要考虑一定的缺点。
你必须生成运动矢量，而这可能意味着修改游戏使用的所有材质来支持渲染运动矢量。
它同时不能很好地处理透明度，因为由Application SpaceWarp生成的中间帧只支持每个单独的像素在一个方向移动。
另外，快速运动会导致伪影。
例如，如果你拿着或挥舞着一把剑，而剑移动的速度很快。
同时，它将消耗一定的帧时间，预计30%的新帧时间会通过生成运动向量消耗。
帮助开发的关键功能有其他功能可以帮助开发任务3。
有很多游戏，比如使用混合现实或手部追踪的游戏，它们都只能在头显端进行测试。
另外，创建Android Build，将其部署到头显，戴上头显，并到达测试更改的点的时间太长，并且减慢了迭代时间。
为了解决这个问题，团队创建了集成在Unity或Unreal和Native引擎的Meta XR Simulator。
每一代的控制器都具有不同的触觉能力。
Quest 2的触觉马达只能在狭窄的频带内工作。
Quest 3的触觉马达要好得多，可以达到更多的频率和幅度。
对于这一点，你可以使用Haptics Studio来处理相关信息。
Haptics Studio的主要目标是一键将音频文件转换为触觉文件，并使用每个控制器的最佳资源集来进行播放。
它同时有一个连接头显的系统，而你可以实时调整触觉。
Meta同时有自己的RenderDoc版本，从而帮助你调试帧的渲染方式，并更深入地了解你的内容是如何生成帧。
下一步以上都是游戏优化方面的介绍，接下来Beyond Frames分享商业和营销方面的最佳实践：如何利用App Lab帮助自己走向成功。
确定自己的目标受众比在什么平台发行应用更重要。
Steam、Meta Quest Store或App Store等平台拥有非常大量的内容，想要脱颖而出变得越来越困难。
有的放矢。
如果你正在考虑发行应用，可以考虑从App Lab开始，让你的应用通过Early Access抢先体验形式发行。
这是一个绝佳的机会，可以让你在正式发行前调整你的体验并完善你的目标。
带着明确的目标进入App Lab。
这个平台不仅仅是一个应用发行平台，它同时是磨练游戏的绝佳场所。
从微调功能和设计元素，到建立社区并提供反馈，App Lab是你的沙盒，同时是你开始旅程的好地方。
好的方面？App Lab提供开放和封闭的测试环境。
这意味着你可以灵活地决定收集反馈的方式和时间。
你可以充分利用这个机会与你的用户互动，让他们在你的游戏发展过程中有发言权。
App Lab的发现挑战是什么？你可能遇到的主要障碍是如何让你的游戏获得大家的关注。
你需要从一开始就制定战略计划，确保人们能够找到进入游戏页面的路径。
这里有一个简单的清单：首先，了解你的目标受众。
他们是益智游戏爱好者，并在寻找下一个挑战吗？寻找故事的人想要潜入另一个世界？动作爱好者渴望快速激烈的比赛？确定你的受众至关重要，因为它会告诉你接下来的所有步骤。
接下来，找到你的故事。
你想在你的营销节奏中编织什么样的叙事？你如何调整它以适应你的受众？你如何将这个故事分解成能够推动你未来创作的引人入胜的小内容？无论是分享游戏功能和更新，还是庆祝节日，你总能找到理由。
你只需要合适的话题、合适的语言和深思熟虑的叙事计划。
精通社交媒体非常重要。
了解每个平台的细节，并使用标签和关键字来获得算法的支持。
为接下来的三个月制定一个内容日历，确保你的消息传递保持正轨。
给你的受众一个发声的机会。
在你开始发帖之前设置一个Discord服务器，并准备好参与其中。
寻求各种V的支持。
寻找真正喜欢你所创造的游戏类型的Up主。
从中小V开始，专注于建立有意义的关系，从而获得反馈。
现在，关于反馈：总是用批判的眼光看待它。
好评固然很好，但要确保你专注于扩大你的受众，而不仅仅是产生积极的反馈。
用积极的反馈作为跳板，不能将其变成舒适区并评估你所提供的内容是否符合受众的期望。
在早期支持者的帮助下扩大你的影响范围，从而证实这种情绪是广泛的。
只有当你愿意采取行动时，反馈才会变成黄金。
关键是在忠于游戏核心和根据玩家反馈进行调整之间找到最佳平衡点。
---原文链接：https://news.nweon.com/119286预览时标签不可点